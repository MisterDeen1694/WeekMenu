---
import { RecipeProducts } from "astro:db";
import { Product } from "astro:db";
import { eq } from "astro:db";
import { Recipe } from "astro:db";
import { db } from "astro:db";

/*
Weekmenu Project Goals
	- Kcal waarden van recept
	- Zelf recepten kiezen (Instelling)
		- Of je wilt kiezen per 5
		- Of de dag populaten met random recepten en vervang knop toevoegen
		- Eventuweel een zoek functie over allen recepten
	- In het recept text hebben staan hoeveel er wat nodig is
		- B.V. Voeg het water toe(250ml) en roer....
	- Overzicht Van gekozen recepten
	- Boodschappen lijstje (per catogarie)
		- Print versie
		- Extra dingen toevoegen zodat alles op 1 lijstje kan staan
	- Recepten automatich dozeren (Instelling)
		- Dozeren op Kcal
		- Dozeren op aantel personen
	-I18n (Extra)
*/
// Get the recpie
const recipes = await db.select().from(Recipe);

//lookup assosited Products
const ingerdentsUsed = await db
	.select()
	.from(RecipeProducts)
	.where(eq(RecipeProducts.recpieId, recipes[0].id));

//get the assosited Products
const ingerdents = await db
	.select()
	.from(Product)
	.where(eq(Product.id, ingerdentsUsed[0].productId));
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>{recipes[0].title}</h1>
		<p>
			{ingerdents[0].name} - {ingerdentsUsed[0].amount}
			{ingerdents[0].measureUnits}
		</p>
	</body>
</html>
